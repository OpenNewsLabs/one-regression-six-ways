filter(contributor_state == "") %>%
summarize(no.state = sum(total_amount), total = mean(total)) %>%
mutate(prop = no.state / total *100) # this represents less than 1% of total donations so that's okay
bernie.states <- bernie.totals %>%
ungroup() %>%
arrange(contributor_state, total_amount) %>%
group_by(contributor_state) %>%
mutate(total.state = sum(total_amount),
prop.state = total.state / total)
states <- read.csv('state_table.csv')
bernie.states.names <- merge(bernie.states, states, by.x = 'contributor_state', by.y = 'abbreviation', all.x = T)
head(states)
bernie.states.names <- merge(bernie.states, states, by.x = 'contributor_state', by.y = 'abbreviation', all.x = T)
tail(bernie.states.names)
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% summarize(n = n()))
bernie.states.names <- merge(bernie.states, states, by.x = 'contributor_state', by.y = 'abbreviation', all.x = T, all.y = F)
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% summarize(n = n()))
bernie.states.names <- merge(bernie.states, states, by.x = 'contributor_state', by.y = 'abbreviation')
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% summarize(n = n()))
bernie.states.names <- merge(bernie.states, states, by.x = 'contributor_state', by.y = 'abbreviation', all = T)
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% summarize(n = n()))
bernie.states.names <- merge(bernie.states, states, by.x = 'contributor_state', by.y = 'abbreviation', all.x = T)
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% summarize(n = n()))
bernie.states.names %>% filter(is.na(bernie.states.names) == T)
bernie.states.names %>% filter(is.na(bernie.states.names$name) == T)
View(bernie.states.names)
head(states)
View(states)
states <- states %>% filter(abbreviation != "")
View(states)
bernie.states.names <- merge(bernie.states, states, by.x = 'contributor_state', by.y = 'abbreviation', all.x = T)
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% summarize(n = n()))
View(bernie.states.names %>% filter(contributor_state == 'MP'))
5400/2
View(bernie.states.names %>% filter(contributor_state == 'PE'))
View(bernie.states.names %>% filter(contributor_state == 'NU'))
head(bernie.states.names)
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% summarize(n = n()))
bernie.states.names$armed <- ifelse(grepl("Armed", bernie.states.names$name), 1,0)
names(bernie.states.names)
bernie.states.names$canada <- ifelse(bernie.states.names$country == "Canada", 1,0)
tail(bernie.states.names)
View(bernie.states.names %>% filter(canada == 1))
View(bernie.states.names %>% filter(armed == 1))
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% filter(total_amount > 2700) %>% summarize(n = n()))
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% filter(total_amount > 2000) %>% summarize(n = n()))
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% filter(total_amount >= 2700) %>% summarize(n = n()))
as.data.frame(bernie.states.names %>% group_by(contributor_state, name) %>% summarize(n = n()))
bernie.states.names %>% group_by(contributor_state, name) %>% mutate(n.state = n())
bernie.states.names <- bernie.states.names %>% group_by(contributor_state, name) %>% mutate(n.state = n())
as.data.frame(bernie.states.names)
View(bernie.states.names)
bernie.states.names <- bernie.states.names %>% ungroup() %>% group_by(contributor_state, name) %>% mutate(n.state = n())
View(bernie.states.names)
bernie.states.names %>% filter(total_amount >= 2700)
bernie.states.names %>% filter(total_amount >= 2700) %>% summarize(n.over = n())
bernie.states.names %>% filter(total_amount >= 2700) %>% summarize(n.over = n(), n = n.state)
bernie.states.names %>% filter(total_amount >= 2700) %>% summarize(n.over = n(), n = sum(n.state))
bernie.states.names %>% filter(total_amount >= 2700) %>% summarize(n.over = n(), n = average(n.state))
bernie.states.names %>% filter(total_amount >= 2700) %>% summarize(n.over = n(), n = mean(n.state))
bernie.states.names %>%
filter(total_amount >= 2700) %>%
summarize(n.over = n(), n = mean(n.state)) %>%
mutate(freq = n / n.over)
bernie.states.names %>%
filter(total_amount >= 2700) %>%
summarize(n.over = n(), n = mean(n.state)) %>%
mutate(freq = n.over / n * 100)
bernie.states.names %>%
filter(total_amount >= 2700) %>%
summarize(n.over = n(), n = mean(n.state)) %>%
mutate(freq = n.over / n * 100) %>%
ungroup() %>%
arrange(desc(freq))
1/31
bernie.states.names %>%
filter(total_amount >= 2700) %>%
summarize(n.over = n(), n = mean(n.state)) %>%
mutate(freq = n.over / n * 100 * 1000) %>%
ungroup() %>%
arrange(desc(freq))
bernie.states.names %>%
filter(total_amount >= 2700) %>%
summarize(n.over = n(), n = mean(n.state)) %>%
mutate(freq = n.over / n * 100) %>%
ungroup() %>%
arrange(desc(freq))
View(bernie.states.names %>%
filter(total_amount >= 2700) %>%
summarize(n.over = n(), n = mean(n.state)) %>%
mutate(freq = n.over / n * 100) %>%
ungroup() %>%
arrange(desc(freq)))
812+329+495
5/1636
View(bernie.states.names %>%
filter(total_amount <= 200) %>%
summarize(n.under = n(), n = mean(n.state)) %>%
mutate(freq = n.over / n * 100) %>%
ungroup() %>%
arrange(desc(freq)))
View(bernie.states.names %>%
filter(total_amount <= 200) %>%
summarize(n.under = n(), n = mean(n.state)) %>%
mutate(freq = n.under / n * 100) %>%
ungroup() %>%
arrange(desc(freq)))
View(bernie.states.names %>%
filter(total_amount <= 200) %>%
summarize(n.under = n(), n = mean(n.state)) %>%
mutate(freq = n.under / n * 100) %>%
ungroup() %>%
arrange(desc(freq)))
names(bernie.states.names)
View(bernie.states.names %>%
filter(total_amount <= 200) %>%
summarize(amount.under = sum(total_amount), total.state = mean(total.state)) %>%
mutate(freq = amount.under / total.state * 100) %>%
ungroup() %>%
arrange(desc(freq)))
View(bernie.states.names %>%
filter(total_amount <= 200) %>%
summarize(amount.under = sum(total_amount), total.state = mean(total.state)) %>%
mutate(freq = amount.under / total.state * 100) %>%
mutate(amount.under.tot = sum(amount.under), test = sum(total.state)) %>%
ungroup() %>%
arrange(desc(freq)))
View(bernie.states.names %>%
filter(total_amount <= 200) %>%
summarize(amount.under = sum(total_amount), total.state = mean(total.state)) %>%
mutate(freq = amount.under / total.state * 100) %>%
mutate(amount.under.tot = sum(amount.under)) %>%
ungroup() %>%
mutate(test = sum(total.state)) %>%
arrange(desc(freq)))
View(bernie.states.names %>%
filter(total_amount <= 200) %>%
summarize(amount.under = sum(total_amount), total.state = mean(total.state)) %>%
mutate(freq = amount.under / total.state * 100) %>%
mutate(amount.under.tot = sum(amount.under)) %>%
ungroup() %>%
mutate(test = sum(total.state)) %>%
arrange(desc(freq)))
View(bernie.states.names %>%
filter(total_amount <= 200) %>%
summarize(amount.under = sum(total_amount), total.state = mean(total.state)) %>%
mutate(freq = amount.under / total.state * 100) %>%
mutate(amount.under.tot = sum(amount.under)) %>%
ungroup() %>%
mutate(test = sum(amount.under)/sum(total.state)) %>%
arrange(desc(freq)))
bernie.states.names %>% ungroup() %>% group_by(armed) %>% summarize(amount = sum(total_amount)) %>% mutate(freq = amount / sum(amount) * 100)
bernie.states.names %>% ungroup() %>% group_by(canada) %>% summarize(amount = sum(total_amount)) %>% mutate(freq = amount / sum(amount) * 100)
library(ggplot2)
library(dplyr)
library(foreign)
library(stringr)
library(zipcode)
data(zipcode)
options(digits = 3)
bernie <- readRDS("clean/bernie.RDS")
setwd("~/Projects/fec-donor-standardizer/repo/bernie/christine")
bernie <- readRDS("clean/bernie.RDS")
bernie.totals <- readRDS("clean/bernie_totals.RDS")
head(bernie.totals)
table(bernie$contribution_date)
states <- read.csv('raw/state_table.csv') # http://statetable.com/
states <- states %>% filter(abbreviation != "")
# zip codes
zip <- read.csv("../seema/zip_totals.csv") # Anthony
zip$zip.new <- str_pad(zip$zip, 5, pad = "0")
zip <- zip %>% arrange(desc(per.capita)) %>%  mutate(rank = rank(desc(per.capita)))
zip.all <- merge(zip, zipcode %>% select(zip, name = city, state), by.x = 'zip.new', by.y = 'zip', all.x = T)
zip %>% filter(zip == 64116)
## Top 20
zip.all %>% arrange(desc(per.capita)) %>% head(20) %>% select(zip.new, total, per.capita, population, rank, name, state)
zip.all %>% arrange(desc(per.capita)) %>% head(20) %>% select(zip.new, total, per.capita, population, rank, name, state) %>% filter(state == 'VT') %>% summarise(n = n())
# make sure amounts match between the bernie and bernie.totals datasets
bernie %>% ungroup() %>% summarise(amount = sum(amount))
bernie.totals %>% ungroup() %>% summarise(amount = sum(total_amount))
# is the average contribution $27?
bernie %>% ungroup() %>% summarise(amount.avg = mean(amount)) # yep
bernie.totals %>% ungroup() %>% summarise(amount = sum(total_amount))
# though the average per donor is
bernie.totals %>% ungroup() %>% summarise(amount.avg = mean(total_amount))
# merge states names with bernie totals
bernie.merged <- merge(bernie.totals, zip.all, by.x = 'contributor_zip_code', by.y = 'zip.new', all.x = T)
bernie.merged$state.final <- ifelse(bernie.merged$contributor_state != "" & (bernie.merged$contributor_zip_code == "" | is.na(bernie.merged$state) == T), as.character(bernie.merged$contributor_state), as.character(bernie.merged$state)) # use geodata for states
bernie.merged.zip <- merge(bernie.merged, states, by.x = "state.final", by.y = "abbreviation", all.x = T)
#bernie.merged.zip <- merge(bernie.merged.zip, la %>% select(contributor_match_id, la.name = name) %>% distinct(contributor_match_id), by = "contributor_match_id", all.x = T)
bernie.merged.zip %>% ungroup() %>% summarise(amount = sum(total_amount))
length(unique(bernie$contributor_match_id))
length(bernie.merged$contributor_match_id)
length(bernie.merged.zip$contributor_match_id)
length(bernie.totals$contributor_match_id)
length(bernie.totals$contributor_match_id)
length(bernie$contributor_match_id)
1929438/6856727
library(ggplot2)
library(dplyr)
library(zoo)
options(digits = 2)
bernie <- readRDS("clean/bernie.RDS")
bernie.merged.zip <- readRDS("clean/bernie_merged.RDS")
# la <- read.csv('data/bernie_la_geocoded_neighborhoods.csv')  # don't have this yet
by.month <- bernie %>% group_by(year.month) %>%
summarise(amount = sum(amount), n = n(), avg.amount = amount/n)
# average donations by month
ggplot(by.month, aes(x = year.month, y = avg.amount)) +
geom_bar(stat = 'identity')
# which donations amounts are the most popular?
bernie %>% group_by(amount) %>% summarise(n = n()) %>% mutate(freq = n/sum(n) * 100) %>% arrange(desc(n))
## % of donations between 25 and 30
bernie$don_25_30 <- ifelse(bernie$amount >= 25 & bernie$amount <= 30, 1, 0)
bernie %>% group_by(don_25_30) %>% summarise(n = n()) %>% mutate(freq = n/sum(n) * 100) %>% arrange(desc(n))
# in Cali? (not different)
bernie %>% filter(contributor_state == "CA") %>% group_by(amount) %>% summarise(n = n()) %>% mutate(freq = n/sum(n) * 100) %>% arrange(desc(n))
# in L.A.? (not different)
#bernie.la <- merge(bernie, la %>% select(contributor_match_id, slug) %>% distinct(contributor_match_id), by = "contributor_match_id", all.x =T)
#bernie.la %>% filter(is.na(slug) == F) %>% group_by(don_25_30) %>% summarise(n = n()) %>% mutate(freq = n/sum(n) * 100) %>% arrange(desc(n))
# anybody who donates just 27, repeatedly?
twenty.seven <- bernie %>% filter(amount == 27) %>% group_by(contributor_match_id, contributor_name, contributor_city, contributor_state, contributor_occupation, contributor_employer) %>% summarise(n = n(), amount.27 = sum(amount)) %>% ungroup() %>% arrange(desc(n))
top.27 <- twenty.seven %>% as.data.frame() %>% head() # quite a few people
# summary(twenty.seven)
# twenty.seven %>% as.data.frame() %>% head(100)
top.27.data <- bernie %>% filter(contributor_match_id %in% top.27$contributor_match_id) %>%
select(contributor_match_id, contributor_name, contribution_date, amount, total_amount, number.of.entries, contributor_employer, contributor_occupation, contributor_street_1, contributor_city, contributor_zip_code)
write.csv(top.27.data, 'output/top27.csv', row.names = F)
# Average time between donations
bernie.sorted <- bernie %>%
filter(number.of.entries > 1) %>%
group_by(contributor_match_id, amount) %>%
mutate(number = n())%>% filter(number > 1) %>%
ungroup() %>%
group_by(contributor_match_id) %>%
arrange(contribution_date)
bernie.sorted <- bernie.sorted %>% ungroup() %>% mutate(diff = as.numeric(difftime(contribution_date, lag(contribution_date), units='days')))
bernie.sorted <- bernie.sorted %>%  group_by(contributor_match_id) %>% mutate(n = seq_along(contributor_match_id))
bernie.sorted <- bernie.sorted %>% filter(n!=1)
as.data.frame(head(bernie.sorted))
bernie.sorted %>% ungroup() %>% summarise(mean(diff))
bernie.sorted %>% ungroup() %>% group_by(diff) %>% summarise(n = n()) %>% mutate(freq = n / sum(n) * 100) %>% arrange(desc(n))
# lots of people give more than once in a day
bernie.totals <- readRDS("clean/bernie_totals.RDS")
bernie.totals %>% summarize(amount = sum(total_amount))
bernie.merged.zip %>% summarize(amount = sum(total_amount))
bernie.totals$often <- ifelse(bernie.totals$number.of.entries > 1, 1, 0)
bernie.totals %>% group_by(often) %>% summarise(n = n(), amount = sum(total_amount)) %>% mutate(frequ = n/sum(n), freq.amount = amount/sum(amount) * 100)
multiple <- bernie.totals %>% ungroup() %>%
group_by(number.of.entries) %>%
summarise(n = n(), amount = sum(total_amount)) %>%
mutate(freq = n/sum(n) * 100, freq.amount = amount/sum(amount) * 100)
multiple$grp <- ifelse(multiple$number.of.entries == 1, 'once',
ifelse(multiple$number.of.entries >= 2 & multiple$number.of.entries < 5, '2 to 5 times',
ifelse(multiple$number.of.entries >= 5 & multiple$number.of.entries < 7, '5 to 7 times',
ifelse(multiple$number.of.entries >= 7 &  multiple$number.of.entries < 10, '7 to 10 times',
'10 or more times'
))))
table(multiple$grp)
multiple$grp <- factor(multiple$grp, levels = c('once', '2 to 5 times', '5 to 7 times', '7 to 10 times', '10 or more times'))
multiple <- multiple %>%
ungroup() %>%
arrange(number.of.entries) %>%
mutate(cum.amount = cumsum(freq.amount), # cumulative proportion of contributions
cum.pop = cumsum(freq)) # cumulative proportion of population
View(multiple)
table(multiple$grp)
summary(bernie.totals$number.of.entries)
quantile(bernie.totals$number.of.entries, probs = seq(0, 1, 0.25))
multiple.grp <- multiple %>% ungroup() %>% group_by(grp) %>% summarise(n.grp = sum(n), freq.grp = sum(freq), amount.grp = sum(amount), freq.grp.amount = sum(freq.amount))
ggplot(multiple.grp, aes(x = grp, y = freq.grp)) +
geom_bar(stat = 'identity')
ggplot(multiple.grp, aes(x = grp, y = amount.grp/1000000)) +
geom_bar(stat = 'identity')
ggplot(multiple %>% filter(number.of.entries <= 100), aes(x = number.of.entries, y = cum.amount)) +
geom_line() +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 5)) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 100, 5))
ggplot(multiple %>% filter(number.of.entries <= 100), aes(x = number.of.entries, y = amount)) +
geom_point()
head(bernie.totals)
small <- bernie.totals %>% filter(total_amount < 200)
length(small$contributor_match_id)
bernie.totals %>% summarise(mean(total_amount))
bernie.sorted <- bernie %>%
filter(number.of.entries > 1) %>%
group_by(contributor_match_id) %>%
mutate(number = n())  %>%
ungroup() %>%
group_by(contributor_match_id) %>%
arrange(contribution_date)
bernie.sorted <- bernie.sorted %>% ungroup() %>% mutate(diff = as.numeric(difftime(contribution_date, lag(contribution_date), units='days')))
bernie.sorted <- bernie.sorted %>%  group_by(contributor_match_id) %>% mutate(n = seq_along(contributor_match_id))
bernie.sorted <- bernie.sorted %>% filter(n!=1)
as.data.frame(head(bernie.sorted))
bernie.sorted %>% ungroup() %>% summarise(mean(diff))
bernie.sorted %>% ungroup() %>% group_by(diff) %>% summarise(n = n()) %>% mutate(freq = n / sum(n) * 100) %>% arrange(desc(n))
# lots of people give more than once in a day
# multiple times per day
multiple.times <- bernie.sorted %>% ungroup() %>% filter(diff == 0 | diff ==1) %>% group_by(contributor_match_id, contributor_name) %>% summarise(n.multiple = n(), amount.multiple = sum(amount)) %>% ungroup() %>% arrange(desc(n.multiple))
head(multiple.times)
multiple.times %>% summarise(sum(amount.multiple)) # how much of his money is this?
bernie %>% summarise(sum(amount))
bernie %>% ungroup() %>% summarise(amount.avg = mean(amount)) # yep
options(digits = 5)
bernie %>% ungroup() %>% summarise(amount.avg = mean(amount)) # yep
twenty.seven <- bernie %>% filter(amount == 27) %>% group_by(contributor_match_id, contributor_name, contributor_city, contributor_state, contributor_occupation, contributor_employer) %>% summarise(n = n(), amount.27 = sum(amount)) %>% ungroup() %>% arrange(desc(n))
bernie %>% group_by(amount) %>% summarise(n = n()) %>% mutate(freq = n/sum(n) * 100) %>% arrange(desc(n))
bernie.totals %>% ungroup() %>% summarise(amount.avg = mean(total_amount))
head(bernie)
ggplot(bernie %>% filter(amount == 27), aes(x = year.month)) +
geom_bar()
ggplot(bernie %>% filter(amount == 27), aes(x = date)) +
geom_bar()
getwd()
setwd("/Users/christinezhang/Projects/R")
setwd("/Users/christinezhang/Projects/regression/R")
d <- read.csv("data.csv")
d
d <- read.csv("data.csv",  header=TRUE)
d
?read.csv()
d <- read.csv("data.csv")
d
head(d)
?lm()
reg <- lm(health ~ income, data = d)
reg
summary(reg)
reg
summary(reg)
abline (reg)
abline(reg)
display(reg)
library(arm)
install.packages("arm")
install.packages("arm")
library(arm)
display(reg)
summary(reg)
display(reg)
display(reg)
?arm()
anova(reg)
plot(reg)
residualPlots(reg1)
residualPlots(reg)
View(d)
plot(health, income)
plot(d$health, d$income)
plot(d$income, d$health)
reg <- lm(health ~ log(income), data = d)
summary(reg)
display(reg)
display(reg)
plot(reg)
plot(health, income)
plot(health, income, data = d)
# set working directory
setwd("/Users/christinezhang/Projects/regression/R")
# read data
d <- read.csv("data.csv")
# run regression
reg <- lm(health ~ log(income), data = d)
summary(reg)
plot(reg)
plot(health, income, data = d)
head(d)
plot(health ~ income, data = d)
fit <- lm(health ~ I(income^2))
fit <- lm(health ~ I(income^2), data = d)
lines(income, fitted(fit), col='red', type='b')
lines(income, fitted(fit), data = d)
lines(d$income, fitted(fit))
fit <- lm(health ~ I(income^.5), data = d)
lines(d$income, fitted(fit))
lines(lowess(d$income, d$health), col="blue")
d <- read.csv("data.csv")
# run regression
reg <- lm(health ~ log(income), data = d)
summary(reg)
plot(reg)
lines(lowess(d$income, d$health), col="blue")
plot(d$income, d$health)
lines(lowess(d$income, d$health), col="blue")
plot(reg)
plot(reg, which = 4)
plot(reg, which = 5)
plot(reg, which = 6)
?qqplot()
?arm()
display(reg)
summary(reg)
plot(reg, which = 1:4)
plot(reg, which = 1:4)
par(mfrow(2:2))
par(mfrow = c(2:2))
par(mfrow = c(2,2))
plot(reg, which = 1:4)
head(d)
row.names(d)
row.names(d) <- d$country
reg <- lm(health ~ log(income), data = d)
summary(reg)
par(mfrow = c(2,2))
plot(reg, which = 1:4)
plot(reg, which = 1:5)
plot(reg, which = 1:4)
plot(reg)
plot(reg, which = 1:4)
plot(reg)
plot(reg, which = 1:4)
plot(reg)
plot(reg, which = 4)
d <- read.csv("data.csv")
# run regression
reg <- lm(health ~ log(income), data = d)
summary(reg)
# assess the regression model
par(mfrow = c(2,2))
plot(reg, which = 4)
plot(reg, which = 1:4)
par(mfrow = c(2,2))
plot(reg, which = 1:4)
plot(reg)
plot(reg)
plot(reg)
plots <- plot(reg)
png('plots.png')
print(plots)
dev.off()
plots <- plot(reg)
png('plots.png')
print(plots)
dev.off()
print(plots)
plot(plots)
plot(reg)
par(mfrow = c(2,2))
plots <- plot(reg)
plot(reg)
plot(reg)
plot(plots)
plots
png('plots.png')
plot(reg)
dev.off()
png('plots.png')
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png', dpi = 100)
par(mfrow = c(2,2))
plot(reg)
dev.off()
?png()
png('plots.png',  units = "px")
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png')
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png')
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png')
par(mfrow = c(2,2),res = NA)
plot(reg)
dev.off()
# assess the regression model
png('plots.png')
par(mfrow = c(2,2),res = 100)
plot(reg)
dev.off()
png('plots.png', res = 100)
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png', res = 100, units = 'px')
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png', res = 200, units = 'px')
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png', res = 150)
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png', res = 100)
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png', width = 4, height = 4, units = 'in', res = 300)
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png', width = 8, height = 6, units = 'in', res = 200)
par(mfrow = c(2,2))
plot(reg)
dev.off()
png('plots.png', width = 8, height = 7, units = 'in', res = 200)
par(mfrow = c(2,2))
plot(reg)
dev.off()
source('~/Projects/regression/R/regression.R', echo=TRUE)
plot(reg)
?plot.lm()
